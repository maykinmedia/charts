{{ if and .Values.global.configuration.enabled (default false .Values.tempjobdjango.enabled) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "openforms.fullname" . }}-tempjobdjango
  labels:
    {{- include "openforms.configLabels" . | nindent 4 }}
    app.kubernetes.io/component: tempjobdjango
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: {{ .Values.tempjobdjango.backoffLimit }}
  ttlSecondsAfterFinished: {{ .Values.tempjobdjango.ttlSecondsAfterFinished }}
  activeDeadlineSeconds: {{ .Values.tempjobdjango.activeDeadlineSeconds | default 21600 }}
  parallelism: {{ .Values.tempjobdjango.parallelism | default 1 }}
  completions: {{ .Values.tempjobdjango.completions | default 1 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openforms.configLabels" . | nindent 8 }}
        app.kubernetes.io/component: tempjobdjango
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openforms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: {{ .Values.tempjobdjango.restartPolicy }}
      containers:
        - name: {{ .Chart.Name }}-tempjobdjango
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Values.existingSecret | default (include "openforms.fullname" .) }}
            - configMapRef:
                name: {{ include "openforms.fullname" . }}
          env:
            {{- if .Values.extraEnvVars }}
            {{- include "openforms.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }} 
          # Django job commands ->  
          {{- if eq (default "managepy" .Values.tempjobdjango.mode) "python" -}}
          # Mode: python - run a script mounted via ConfigMap/Secret/PVC
          command: ["/bin/bash", "-c"]
          {{- if and (default false .Values.tempjobdjango.configMap.enabled) (default "" .Values.tempjobdjango.configMap.scriptCode) }}
          args: ["python {{( default "/app/bin" .Values.tempjobdjango.configMap.scriptMountPath )}}/{{ (default "custom_script.py" .Values.tempjobdjango.configMap.scriptName) }}{{ if (default false .Values.tempjobdjango.logging.enabled ) }} 2>&1 | tee /app/log/tempjobdjango.log{{ end }}"]
          {{- else }}
          args:
            - |
              echo "Error: Python mode requires configMap.enabled=true and configMap.scriptCode to be specified"
              echo "Current configuration:"
              echo "  mode: {{ .Values.tempjobdjango.mode }}"
              echo "  configMap.enabled: {{ .Values.tempjobdjango.configMap.enabled }}"
              echo "  configMap.scriptCode: {{ if .Values.tempjobdjango.configMap.scriptCode }}specified{{ else }}not specified{{ end }}"
              echo ""
              echo "Please update your values.yaml with:"
              echo "  tempjobdjango:"
              echo "    mode: python"
              echo "    configMap:"
              echo "      enabled: true"
              echo "      scriptCode: |"
              echo "        # Your Python code here"
              exit 1
          {{- end }}                                                                                                                                           
          {{- else if eq (default "managepy" .Values.tempjobdjango.mode) "managepy" -}} 
          # Mode: managepy - run a Django management command with flexible base command and parameters
          command: ["/bin/bash", "-c"]
          args:
            - |
              {{- if (default "" .Values.tempjobdjango.command) }}
              {{ default "/app/src/manage.py" .Values.tempjobdjango.scriptPath }} {{ .Values.tempjobdjango.command }}{{ if (default "" .Values.tempjobdjango.commandParams) }} {{ .Values.tempjobdjango.commandParams }}{{ end }}{{ if (default false .Values.tempjobdjango.logging.enabled ) }} 2>&1 | tee /app/log/tempjobdjango.log{{ end }}
              {{- else }}
              echo "Error: managepy mode requires a command"
              exit 1
              {{- end }}
          {{- else if eq (default "managepy" .Values.tempjobdjango.mode) "container" -}}          
          # Mode: container - run a script already present in the container image
          command: ["/bin/bash", "-c"]
          args: ["python {{ default "/app/src/manage.py" .Values.tempjobdjango.scriptPath }}{{ if (default false .Values.tempjobdjango.logging.enabled ) }} 2>&1 | tee /app/log/tempjobdjango.log{{ end }}"]
          {{- else if eq (default "managepy" .Values.tempjobdjango.mode) "shell" -}} 
          # Mode: shell - run a manage.py shell command
          command: ["/bin/bash", "-c"]
          {{- if and (default false .Values.tempjobdjango.configMap.enabled) (default "" .Values.tempjobdjango.configMap.shellScript) }}
          args: ["python /app/src/manage.py shell < {{( default "/app/bin" .Values.tempjobdjango.configMap.scriptMountPath )}}/{{( default "shell_script.py" .Values.tempjobdjango.configMap.scriptName )}}{{ if (default false .Values.tempjobdjango.logging.enabled ) }} 2>&1 | tee /app/log/tempjobdjango.log{{ end }}"]
          {{- else }}
          args:
            - |
              echo "Error: Shell mode requires configMap.enabled=true with configMap.shellScript"
              echo "Current configuration:"
              echo "  mode: {{ .Values.tempjobdjango.mode }}"
              echo "  configMap.enabled: {{ .Values.tempjobdjango.configMap.enabled }}"
              echo "  configMap.shellScript: {{ if .Values.tempjobdjango.configMap.shellScript }}specified{{ else }}not specified{{ end }}"
              echo ""
              echo "  Please add Shell Script for ConfigMap:"
              echo "    tempjobdjango:"
              echo "      mode: shell"
              echo "      configMap:"
              echo "        enabled: true"
              echo "        shellScript: |"
              echo "          print('Hello from shell script!')"
              exit 1
          {{- end }}          
          # Unsupported mode - show helpful error message
          {{- else }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Error: Unsupported mode '{{ .Values.tempjobdjango.mode }}'"
              echo "Supported modes are: python, managepy, container, shell"
              echo "Current configuration:"
              echo "  mode: {{ .Values.tempjobdjango.mode }}"
              echo "  scriptPath: {{ .Values.tempjobdjango.scriptPath }}"
              echo "  command: {{ .Values.tempjobdjango.command }}"
              echo "  commandParams: {{ .Values.tempjobdjango.commandParams }}"
              echo ""
              echo "Please update your values.yaml with a supported mode."
              exit 1          
          {{- end }}
          # End job commands 
          resources:
          {{- toYaml .Values.tempjobdjango.resources | nindent 12 }} 
          volumeMounts:
            - name: media
              mountPath: /app/private-media
              subPath: {{ .Values.persistence.privateMediaMountSubpath | default "openforms/private_media" }}
            - name: media
              mountPath: /app/media
              subPath: {{ .Values.persistence.mediaMountSubpath  | default "openforms/media" }}
            {{- if and (or (eq (default "managepy" .Values.tempjobdjango.mode) "python") (eq (default "managepy" .Values.tempjobdjango.mode) "shell")) (default false .Values.tempjobdjango.configMap.enabled) }}
            - name: script-volume
              mountPath: {{ .Values.tempjobdjango.configMap.scriptMountPath | default "/app/bin" }}
              readOnly: true
            {{- end }}
            {{- if .Values.tempjobdjango.logging.enabled | default false }}
            - name: media
              mountPath: /app/log
              subPath: {{ .Values.persistence.tempjobMountSubpath  | default "openforms/temp_job" }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "openforms.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
      volumes:
        - name: media
          persistentVolumeClaim:
          {{- if .Values.persistence.enabled }}
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "openforms.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        {{- if and (or (eq (default "managepy" .Values.tempjobdjango.mode) "python") (eq (default "managepy" .Values.tempjobdjango.mode) "shell")) (default false .Values.tempjobdjango.configMap.enabled) }}
        - name: script-volume
          configMap:
            name: {{ .Values.tempjobdjango.configMap.name | default (printf "%s-tempjobdjango-script" (include "openforms.fullname" .)) }}
            defaultMode: 0755
        {{- end }}      
        {{- if .Values.extraVolumes }}
        {{- include "openforms.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}