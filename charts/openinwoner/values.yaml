global:
  settings:
    # -- Global databasehost, overrides setting.database.host
    databaseHost: ""
  configuration:
    enabled: false
    secrets: {}

configuration:
  enabled: false
  initContainer:
    # -- Run the setup configuration command in a init container
    enabled: false
  job:
    # -- Run the setup configuration command as a job
    enabled: true
    backoffLimit: 6
    # -- 0 Will clean the job after it is finished
    ttlSecondsAfterFinished: 0    
    restartPolicy: OnFailure
    # Note, this field is immutable
    resources: {}
      # limits:
      #   cpu: 200m
      #   memory: 256Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
  secrets: {}
  data: ""
  # e.g.
  # data: |-
  #   oidc_db_config_enable: True
  #   oidc_db_config_admin_auth:
  #     items:
  #     - identifier: admin-oidc
  #       enabled: True
  #       oidc_rp_client_id: openinwoner.example.nl 
  #       oidc_rp_client_secret: ${keycloak_client_secret}
  #       oidc_rp_scopes_list:
  #       - openid
  #       - email
  #       - profile
  #       - roles
  #       oidc_rp_sign_algo: RS256
  #       endpoint_config:
  #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/example/
  #       username_claim:
  #       - sub
  #       groups_claim:
  #       - roles
  #       claim_mapping:
  #         first_name:
  #         - given_name
  #         last_name:
  #         - family_name
  #       sync_groups: true
  #       sync_groups_glob_pattern: "*"
  #       default_groups: []
  #       make_users_staff: true
  #       superuser_group_names:
  #       - Superuser
  #       oidc_use_nonce: true
  #       oidc_nonce_size: 32
  #       oidc_state_size: 32
  #       userinfo_claims_source: id_token
  #   zgw_consumers_config_enable: True
  #   zgw_consumers:
  #     services:
  #       - identifier: zaken-test
  #         label: Open Zaak - Zaken API
  #         api_root: https://openzaak.example.nl/zaken/api/v1/
  #         api_type: zrc
  #         auth_type: zgw
  #         client_id: openinwoner
  #         secret: ${openzaak_openinwoner_secret}
  #       - identifier: documenten-test
  #         label: Open Zaak - Documenten API
  #         api_root: https://openzaak.example.nl/documenten/api/v1/
  #         api_type: drc
  #         auth_type: zgw
  #         client_id: openinwoner
  #         secret: ${openzaak_openinwoner_secret}
  #       - identifier: catalogi-test
  #         label: Open Zaak - Catalogi API
  #         api_root: https://openzaak.example.nl/catalogi/api/v1/
  #         api_type: ztc
  #         auth_type: zgw
  #         client_id: openinwoner
  #         secret: ${openzaak_openinwoner_secret}
  #       - identifier: besluiten-test
  #         label: Open Zaak - Besluiten API
  #         api_root: https://openzaak.example.nl/besluiten/api/v1/
  #         api_type: brc
  #         auth_type: zgw
  #         client_id: openinwoner
  #         secret: ${openzaak_openinwoner_secret}
  #       - identifier: selectielijst
  #         label: Open Zaak (public) - Selectielijst API
  #         api_root: https://selectielijst.openzaak.nl/api/v1/
  #         api_type: orc
  #         auth_type: no_auth
  #       - identifier: klanten-test
  #         label: Open klanten API
  #         api_root: https://openklant.example.nl/klanten/api/v1/
  #         api_type: kc
  #         auth_type: zgw
  #         client_id: openinwoner
  #         secret: ${openklant_openinwoner_token}
  #   openzaak_config_enable: true
  #   openzaak_config:
  #     zaak_max_confidentiality: openbaar
  #     document_max_confidentiality: vertrouwelijk
  #     max_upload_size: 50
  #     skip_notification_statustype_informeren: false
  #     reformat_esuite_zaak_identificatie: true
  #     derive_zaak_titel_from: zaaktype_omschrijving
  #     order_statuses_by_date_set: false
  #     title_text: title text from setup configuration
  #     enable_categories_filtering_with_zaken: true
  #     action_required_deadline_days: 1874
  #     zaken_filter_enabled: 'true'
  #     allowed_file_extensions:
  #       - .pdf
  #       - .txt
  #     api_groups:
  #       - zaken_api_identifier: zaken-test
  #         documenten_api_identifier: documenten-test
  #         catalogi_api_identifier: catalogi-test
  #         fetch_eherkenning_zaken_with_rsin: true
  #   openklant_config_enable: false
  #   # OpenKlant2
  #   openklant2_config_enable: true
  #   openklant2_config:
  #     service_identifier: klanten-test
  #     mijn_vragen_kanaal: formulier
  #     mijn_vragen_organisatie_naam: De Gemeente
  #     mijn_vragen_actor: e412c6f6-bc31-4fd4-b883-0fb5e88d3f5b
  #     interne_taak_gevraagde_handeling: Vraag beantwoorden
  #     interne_taak_toelichting: Vraag via OIP, graag beantwoorden

tags:
  redis: true
  elasticsearch: true

replicaCount: 2

image:
  repository: maykinmedia/open-inwoner
  pullPolicy: IfNotPresent
  # -- uses .Chart.AppVersion by default
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  className: ""
  # -- ingress hosts
  hosts: []
  #  - host: openinwoner.gemeente.nl
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls: []
  #  - secretName: openinwoner-tls
  #    hosts:
  #      - openinwoner.gemeente.nl

extraIngress: []
# e.g:
# extraIngress:
#  - name: openinwoner-azuregateway
#    annotations:
#      appgw.ingress.kubernetes.io/ssl-redirect: "true"
#    className: azure-application-gateway
#    hosts:
#      - host: openinwoner.gemeente.nl
#        paths:
#          - path: /
#            pathType: ImplementationSpecific
#            servicename: openklant
#            portNumber: 8000
#    tls:
#      - secretName: openinwoner-tls
#        hosts:
#          - "openinwoner.gemeente.nl"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 2Gi
  # requests:
  #   cpu: 500m
  #   memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  size: 1Gi
  storageClassName: ""
  existingClaim: null
  mediaMountSubpath: openinwoner/media
  privateMediaMountSubpath: openinwoner/private_media

# Existing Secret must be defined for AzureVaultSecret to work
existingSecret: null
existingConfigurationSecrets: null

# This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
# ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
# Using this feature requires you to define existingSecret
azureVaultSecret:
  # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
  vaultName: null
  # The name of the Multi Key Value Secret
  objectName: ""
  # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
  contentType: ""
  # You must set .Values.existingSecret
  secretName: "{{ .Values.existingSecret }}"

# -- Array with extra environment variables to add
extraEnvVars: []
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"

# -- Optionally specify extra list of additional volumes
extraVolumes: []
# e.g:
# extraVolumes:
#   - name: verify-certs
#     configMap:
#       name: verify-certs

# -- Optionally specify extra list of additional volumeMounts
extraVolumeMounts: []
# e.g:
# extraVolumeMounts:
#  - name: verify-certs
#    mountPath: /etc/ssl/certs/extra-certs/

# -- Extra objects to deploy (value evaluated as a template)
extraDeploy: []

settings:
  allowedHosts: ""
  djangoSettingsModule: open_inwoner.conf.docker

  # -- Will load all fixtures in /app/src/open_inwoner/conf/fixtures/*.json
  loadFixtures: false

  # -- Elasticsearch hostname, only required when tags.elasticsearch is false
  elasticSearchHost: ""

  # -- Generate secret key at https://djecrety.ir/
  secretKey: ""

  environment: null

  database:
    host: ""
    port: 5432
    name: ""
    username: ""
    password: ""
    sslmode: prefer

  email:
    host: localhost
    port: 25
    username: ""
    password: ""
    useTLS: false
    defaultFrom: ""

  elasticapm:
    url: ""
    token: ""

  smsgateway:
    # -- For example "open_inwoner.accounts.gateways.MessageBird"
    backend: ""
    apikey: ""

  brpVersion: ""

  digidMock: ""
  eherkenningMock: ""

  sentry:
    dsn: ""

  cache:
    # -- Sets 'CACHE_DEFAULT' var, only required when tags.redis is false
    default: ""
    # -- Sets 'CACHE_AXES' var, only required when tags.redis is false
    axes: ""
    # When not using the redis subcharts you can set them manually like this:
    # default: myredisserver:6379/0
    # axes: myredisserver:6379/0

  # Celery cache settings, when the redis subchart is enabled these settings will be ignored and caching will default to the redis subchart services
  celery:
    # e.g.:
    # brokerUrl: redis://openforms-redis-master:6379/1
    # resultBackend: redis://openforms-redis-master:6379/1
    brokerUrl: ""
    resultBackend: ""
    logLevel: debug

  isHttps: true

  debug: false

  uwsgi:
    threads: ""
    processes: ""
    maxRequests: ""
    harakiri: ""
    port: ""
    httpTimeout: ""
    httpKeepalive: ""
    # In bytes:
    postBuffering: ""
    bufferSize: ""

  # -- Runs a init container that will run /app/src/manage.py search_index --rebuild -f. You might want to enable this one time for new deployments if you want to prevent 500 errors when using the search function
  searchInexInitContainer: false

worker:
  replicaCount: 2
  concurrency: 4
  podLabels: {}
  resources: {}
    # requests:
    #   cpu: 250m
    #   memory: 256Mi
  # Defaults to 60s
  maxWorkerLivenessDelta: ""
  livenessProbe:
    enabled: false
    exec:
      command:
        - /bin/sh
        - -c
        - celery --workdir src --app open_inwoner.celery inspect --destination celery@${HOSTNAME} active
    initialDelaySeconds: 60
    # Periodeseconds should not exceed maxWorkerLivenessDelta
    periodSeconds: 50
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

beat:
  replicaCount: 1
  podLabels: {}
  resources: {}
    # requests:
    #   cpu: 250m
    #   memory: 256Mi

celeryMonitor:
  replicaCount: 1
  podLabels: {}
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

nginx:
  image:
    repository: nginxinc/nginx-unprivileged
    pullPolicy: IfNotPresent
    tag: stable
  config:
    clientMaxBodySize: 10M
    # -- Configure nginx basic authentication, only use if you are unable to set it on your ingress controller
    basicAuth:
      # -- Enables nginx basic password authentication
      enabled: false
      # -- You need to generate the encrypted basic auth password yourself
      users: |-
        usernameexample:$apr1$5QwE2Ysc$ycRucgmLt0iQMMxcnu4CA/
  # extraVolumes Optionally specify extra list of additional volumes
  # e.g:
  # extraVolumes:
  #   - name: tmp
  #     emptyDir: {}
  #
  extraVolumes: []
  # extraVolumeMounts Optionally specify extra list of additional volumeMounts
  # e.g:
  # extraVolumeMounts:
  #   - name: tmp
  #     mountPath: /tmp
  extraVolumeMounts: []
  service:
    type: ClusterIP
    port: 80
    annotations: {}
  replicaCount: 1
  podLabels: {}
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 101
  autoscaling:
    enabled: false
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  resources: {}
    # requests:
    #   cpu: 250m
    #   memory: 256Mi


##################
# Redis subchart #
##################

redis:
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    resources:
      requests:
        cpu: 250m
        memory: 256Mi

##########################
# elasticsearch subchart #
##########################

elasticsearch:
  master:
    masterOnly: true
    replicaCount: 1
    persistence:
      enabled: true
      storageClass: ""
      size: "8Gi"
    resources:
      limits: {}
      requests:
        cpu: 100m
        memory: 640Mi
  data:
    replicaCount: 1
    persistence:
      enabled: true
      storageClass: ""
      size: 8Gi
    resources:
      limits: {}
      requests:
        cpu: 100m
        memory: 512Mi
  coordinating:
    replicaCount: 1
  ingest:
    enabled: false
