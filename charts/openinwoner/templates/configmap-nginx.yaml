apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openinwoner.nginxFullname" . }}
  labels:
    {{- include "openinwoner.nginxLabels" . | nindent 4 }}
data:
  proxy: |
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout {{ .Values.nginx.config.proxyConnectTimeoutSeconds }}s;
    proxy_read_timeout {{ .Values.nginx.config.proxyReadTimeoutSeconds }}s;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass_request_headers on;
    add_header X-Cache-Status $upstream_cache_status;
    proxy_pass http://{{ include "openinwoner.fullname" . }}.{{ .Release.Namespace }};

  default.conf: |
    server {
        listen 8080 default_server;
        server_name {{ .Values.settings.allowedHosts  | replace "," " "}} localhost;
        server_tokens off;
        client_max_body_size {{ .Values.nginx.config.clientMaxBodySize }};

        gzip  on;
        gzip_http_version 1.0;
        gzip_comp_level 2;
        gzip_min_length 1100;
        gzip_buffers     4 8k;
        gzip_proxied any;
        gzip_types

          # text/html is always compressed by HttpGzipModule
          text/css
          text/javascript
          text/xml
          text/plain
          text/x-component
          application/javascript
          application/json
          application/xml
          application/rss+xml
          font/truetype
          font/opentype
          application/vnd.ms-fontobject
          image/svg+xml;

        gzip_static on;

        gzip_proxied        expired no-cache no-store private auth;
        gzip_disable        "MSIE [1-6]\.";
        gzip_vary           on;

        location / {
            include conf.d/proxy;
            {{- if .Values.nginx.config.basicAuth.enabled }}
            auth_basic "{{ include "openinwoner.fullname" . }}";
            auth_basic_user_file /etc/.basicauth/.basicauth;
            {{- end }}
        }

        location /_health/ {
            access_log /var/log/nginx/access.log;
            error_log /var/log/nginx/error.log error;
            return 200 'OK';
        }

      location /media {
          alias /app/media/;
      }
    }
