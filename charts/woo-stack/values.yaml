
openzaak:
  enabled: true
  configuration:
    enabled: true
    sites:
      enabled: true
      openzaakDomain: openzaak.example.com
      organization: Gemeente Example
    notificatiesAuthorization:
      enabled: true
      notificationOpenzaakClientId: notif-client-id
      notifcationOpenzaakSecret: notif-secret
    notificaties:
      enabled: true
      ApiRoot: http://opennotificaties.example.nl/api/v1/
      openzaakNotifcationClientId: oz-client-id
      openzaakNotificationSecret: oz-secret
    selectieLijst:
      enabled: true
      ApiRoot: https://selectielijst.openzaak.nl/api/v1/
      ApiOas:  https://selectielijst.openzaak.nl/api/v1/schema/openapi.yaml
      AllowedYears: [2017, 2020]
      DefaultYear: 2020
    superuser:
      username: ""
      password: ""
      email: ""
    cronjob:
      # -- Schedule to run the clean logged notifications cronjob
      schedule: "0 0 * * *"
      historyLimit: 1
      resources: {}

  tags:
    redis: true

  replicaCount: 1

  image:
    repository: openzaak/open-zaak
    pullPolicy: IfNotPresent
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    name: ""
    automountServiceAccountToken: true

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    className: ""
    # -- ingress hosts
    hosts: []
    #  - host: openformulieren.gemeente.nl
    #    paths:
    #      - path: /
    #        pathType: ImplementationSpecific
    tls: []
    #  - secretName: openzaak-tls
    #    hosts:
    #      - openformulieren.gemeente.nl

  # -- Specify extra ingresses, for example if you have multiple ingress classes
  extraIngress: []
  # e.g:
  # extraIngress:
  #  - name: openzaak-azuregateway
  #    annotations:
  #      appgw.ingress.kubernetes.io/ssl-redirect: "true"
  #    className: azure-application-gateway
  #    hosts:
  #      - host: openzaak.gemeente.nl
  #        paths:
  #          - path: /
  #            pathType: ImplementationSpecific
  #            servicename: openzaak
  #            portNumber: 8000
  #    tls:
  #      - secretName: openzaak-tls
  #        hosts:
  #          - "openzaak.gemeente.nl"

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 200m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistence:
    enabled: true
    size: 1Gi
    storageClassName: ""
    existingClaim: null
    mediaMountSubpath: openzaak/media
    privateMediaMountSubpath: openzaak/private_media

  # Existing Secret must be defined for AzureVaultSecret to work
  existingSecret: null

  # This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
  # ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
  # Using this feature requires you to define existingSecret
  azureVaultSecret:
    # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
    vaultName: null
    # The name of the Multi Key Value Secret
    objectName: ""
    # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
    contentType: ""
    # You must set .Values.existingSecret
    secretName: "{{ .Values.existingSecret }}"

  # extraEnvVars Array with extra environment variables to add to openzaak
  # e.g:
  # extraEnvVars:
  #   - name: FOO
  #     value: "bar"
  #
  extraEnvVars: []
  # extraVolumes Optionally specify extra list of additional volumes
  # e.g:
  # extraVolumes:
  #   - name: verify-certs
  #     configMap:
  #       name: verify-certs
  #
  extraVolumes: []
  # extraVolumeMounts Optionally specify extra list of additional volumeMounts
  # e.g:
  # extraVolumeMounts:
  #  - name: verify-certs
  #    mountPath: /etc/ssl/certs/extra-certs/
  extraVolumeMounts: []
  # Path to extra certificates or CA (root) certificates, comma seperated
  # Wardning, If the file does not exist the pod(s) will not start
  # e.g.
  # extraVerifyCerts: /etc/ssl/certs/extra-certs/staatdernederlandeng1.pem
  extraVerifyCerts: ""

  # Extra objects to deploy (value evaluated as a template)
  extraDeploy: []

  settings:
    allowedHosts: ""
    djangoSettingsModule: openzaak.conf.docker
    useXForwardedHost: true

    # -- Generate secret key at https://djecrety.ir/
    secretKey: ""

    environment: ""

    database:
      host: open-zaak-postgresql
      port: 5432
      username: postgres
      password: ""
      name: openzaak
      sslmode: prefer

    # -- use 2 if enabling ingress
    numProxies: 1

    email:
      host: localhost
      port: 25
      username: ""
      password: ""
      useTLS: false

    flower:
      urlPrefix: ""
      basicAuth: ""

    elasticapm:
      url: ""
      token: ""
      serviceName: ""

    sentry:
      dsn: ""

    # Cache settings, when the redis subchart is enabled these settings will be ignored and caching will default to the redis subchart services.
    cache:
      # default: openzaak-redis-master-0:6379/0
      # axes: openzaak-redis-master-0:6379/0
      # portalLocker: openzaak-redis-master-0:6379/0
      default: ""
      axes: ""
      portalLocker: ""

    celery:
      # -- Deploy celery (worker), celery is required from openzaak version 1.8.0
      enabled: true
      # Celery cache settings, when the redis subchart is enabled these settings will be ignored and caching will default to the redis subchart services
      # e.g.:
      # brokerUrl: redis://openzaak-redis-master:6379/1
      # resultBackend: redis://openzaak-redis-master:6379/1
      brokerUrl: ""
      resultBackend: ""
      logLevel: debug

    notificationsDisabled: false

    jwtExpiry: 3600

    cmis:
      enabled: false
      mapperFile: ""

    isHttps: true

    debug: false

    uwsgi:
      master: ""
      threads: ""
      processes: ""
      maxRequests: ""
      harakiri: ""

  worker:
    replicaCount: 1
    concurrency: 4
    podLabels: {}
    resources: {}
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80

  nginx:
    image:
      repository: nginxinc/nginx-unprivileged
      pullPolicy: IfNotPresent
      tag: stable
    service:
      type: ClusterIP
      port: 80
      annotations: {}
    # -- mount existing nginx vhost config
    existingConfigmap: null
    replicaCount: 1
    podLabels: {}
    securityContext:
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 101
    autoscaling:
      enabled: false
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    resources: {}

  flower:
    enabled: true
    replicaCount: 1
    podLabels: {}
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    resources: {}

  # Redis subchart
  redis:
    architecture: standalone
    auth:
      enabled: false
    master:
      persistence:
        enabled: false
      resources:
        requests:
          cpu: 10m
          memory: 20Mi


registratie-component: 
  enabled: true
  tags:
    redis: true

  replicaCount: 1

  image:
    repository: maykinmedia/woo-publications
    pullPolicy: IfNotPresent
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    name: ""
    automountServiceAccountToken: true

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    className: ""
    # -- ingress hosts
    hosts: []
    #  - host: registratie-component.gemeente.nl
    #    paths:
    #      - path: /
    #        pathType: ImplementationSpecific
    tls: []
    #  - secretName: registratie-component-tls
    #    hosts:
    #      - registratie-component.gemeente.nl

  # -- Specify extra ingresses, for example if you have multiple ingress classes
  extraIngress: []
  # e.g:
  # extraIngress:
  #  - name: registratie-component-azuregateway
  #    annotations:
  #      appgw.ingress.kubernetes.io/ssl-redirect: "true"
  #    className: azure-application-gateway
  #    hosts:
  #      - host: registratie-component.gemeente.nl
  #        paths:
  #          - path: /
  #            pathType: ImplementationSpecific
  #            servicename: registratie-component
  #            portNumber: 8000
  #    tls:
  #      - secretName: registratie-component-tls
  #        hosts:
  #          - "registratie-component.gemeente.nl"

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 200m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistence:
    size: 1Gi
    storageClassName: ""
    existingClaim: null
    mediaMountSubpath: registratie-component/media
    privateMediaMountSubpath: registratie-component/private_media

  # Existing Secret must be defined for AzureVaultSecret to work
  existingSecret: null

  # This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
  # ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
  # Using this feature requires you to define existingSecret
  azureVaultSecret:
    # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
    vaultName: null
    # The name of the Multi Key Value Secret
    objectName: ""
    # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
    contentType: ""
    # You must set .Values.existingSecret
    secretName: "{{ .Values.existingSecret }}"

  # -- Array with extra environment variables to add
  extraEnvVars: []
  # e.g:
  # extraEnvVars:
  #   - name: FOO
  #     value: "bar"

  # -- Optionally specify extra list of additional volumes
  extraVolumes: []
  # e.g:
  # extraVolumes:
  #   - name: verify-certs
  #     configMap:
  #       name: verify-certs

  # -- Optionally specify extra list of additional volumeMounts
  extraVolumeMounts: []
  # e.g:
  # extraVolumeMounts:
  #  - name: verify-certs
  #    mountPath: /etc/ssl/certs/extra-certs/

  settings:
    allowedHosts: ""
    djangoSettingsModule: woo_publications.conf.docker
    useXForwardedHost: false

    # -- Generate secret key at https://djecrety.ir/
    secretKey: ""

    # -- Choises Strict or Lax
    cookieSamesite: ""

    # -- sets the 'ENVIRONMENT' variable
    environment: ""

    # -- Display environment information in the header in the admin. Defaults to True. Environment information is only displayed to logged in users.
    show_label_environment: "false"
    # -- Environment information to display, defaults to the value of ENVIRONMENT. Only displayed when SHOW_ENVIRONMENT is set to True. You can set this to strings like OpenGem PROD or simply PROD, depending on your needs.
    environment_label: ""
    environment_background_color: ""


    elasticapm:
      url: ""
      token: ""
      serviceName: ""

    database:
      host: ""
      port: 5432
      username: ""
      password: ""
      name: ""
      sslmode: prefer

    email:
      host: localhost
      port: 25
      username: ""
      password: ""
      useTLS: false
      defaultFrom: ""

    sentry:
      dsn: ""

    documentMaxBodySize: 4G

    # Cache settings, when the redis subchart is enabled these settings will be ignored and caching will default to the redis subchart services.
    cache:
      # e.g.:
      # default: openforms-redis-master-0:6379/0
      # axes: openforms-redis-master-0:6379/0
      # oidc: openforms-redis-master-0:6379/0
      default: ""
      axes: ""
      oidc: ""

    isHttps: true

    debug: false

    uwsgi:
      master: ''
      threads: ''
      processes: ''
      maxRequests: ''
      harakiri: ''

    # -- Disable two factor authentication
    disable2fa: false

    # -- Display environment information in the header in the admin. Defaults to True. Environment information is only displayed to logged in users.
    showLabelEnvironment: false
    # -- Environment information to display, defaults to the value of ENVIRONMENT. Only displayed when SHOW_ENVIRONMENT is set to True. You can set this to strings like OpenGem PROD or simply PROD, depending on your needs.
    environmentLabelName: ""
    # --  CSS color value for the environment information background color. Defaults to orange, example values can be specified in HEX format too, e.g.: #FF0000 for red.
    environmentLabelBackgroundColor: ""
    # -- CSS color value for the environment information text color. Defaults to black. Follows the same rules as ENVIRONMENT_BACKGROUND_COLOR.
    environmentLabelForegroundColor: ""

  nginx:
    image:
      repository: nginxinc/nginx-unprivileged
      pullPolicy: IfNotPresent
      tag: stable
    existingConfigmap: null
    service:
      type: ClusterIP
      port: 80
      annotations: {}
    replicaCount: 1
    podLabels: {}
    securityContext:
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 101
    autoscaling:
      enabled: false
    livenessProbe: {}
    readinessProbe: {}
    resources: {}

  # Redis subchart 
  redis:
    architecture: standalone
    auth:
      enabled: false
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 10m
          memory: 20Mi

icatt-odpc:
  enabled: true
  tags:
    redis: true

  replicaCount: 1

  image:
    repository: "ghcr.io/generiekpublicatieplatformwoo/openbaar-documenten-publicatie-component"
    pullPolicy: IfNotPresent
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    name: ""
    automountServiceAccountToken: true

  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    className: ""
    # -- ingress hosts
    hosts: []
    #  - host: icatt-odpc.gemeente.nl
    #    paths:
    #      - path: /
    #        pathType: ImplementationSpecific
    tls: []
    #  - secretName: icatt-odpc-tls
    #    hosts:
    #      - icatt-odpc.gemeente.nl

  # -- Specify extra ingresses, for example if you have multiple ingress classes
  extraIngress: []
  # e.g:
  # extraIngress:
  #  - name: icatt-odpc-azuregateway
  #    annotations:
  #      appgw.ingress.kubernetes.io/ssl-redirect: "true"
  #    className: azure-application-gateway
  #    hosts:
  #      - host: icatt-odpc.gemeente.nl
  #        paths:
  #          - path: /
  #            pathType: ImplementationSpecific
  #            servicename: icatt-odpc
  #            portNumber: 8000
  #    tls:
  #      - secretName: icatt-odpc-tls
  #        hosts:
  #          - "icatt-odpc.gemeente.nl"

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 200m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

  persistence:
    enabled: true
    size: 1Gi
    storageClassName: ""
    existingClaim: null

  # Existing Secret must be defined for AzureVaultSecret to work
  existingSecret: null

  # This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
  # ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
  # Using this feature requires you to define existingSecret
  azureVaultSecret:
    # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
    vaultName: null
    # The name of the Multi Key Value Secret
    objectName: ""
    # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
    contentType: ""
    # You must set .Values.existingSecret
    secretName: "{{ .Values.existingSecret }}"

  settings:
    database:
      host: ""
      port: 5432
      username: ""
      password: ""
      name: ""
      sslmode: prefer

    oidc:
      adminRole: ""
      authority: ""
      clientId: ""
      clientSecret: ""
      roleClaimType: ""
      idClaimType: ""
      nameClaimType: ""

    odrc:
      apiKey: ""
      baseUrl: ""

    aspnetcore:
      forwardedHeadersEnabled: true
      environment: ""
      httpPorts: ""

    # Redis subchart 
    redis:
      architecture: standalone
      auth:
        enabled: false
      master:
        persistence:
          enabled: true
          size: 8Gi
          storageClass: ""
        resources:
          requests:
            cpu: 10m
            memory: 20Mi